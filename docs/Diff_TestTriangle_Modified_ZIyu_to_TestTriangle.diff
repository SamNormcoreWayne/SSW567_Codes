--- C:\Users\64937\OneDrive\Documents\SSW\567\SSW567_Codes\TestTriangle_Modified_Ziyu.py    Tue Feb  5 16:06:18 2019
+++ C:\Users\64937\OneDrive\Documents\SSW\567\SSW567_Codes\TestTriangle.py  Tue Feb  5 15:57:58 2019
@@ -1,47 +1,30 @@
 # -*- coding: utf-8 -*-
 """
-Updated Feb 8, 2019
+Updated Jan 21, 2018
 The primary goal of this file is to demonstrate a simple unittest implementation
 
 @author: jrr
 @author: rk
-@author: Ziyu Zhang
 """
 
 import unittest
 
-from Triangle_Modified_Ziyu import classifyTriangle
+from Triangle import classifyTriangle
 
 # This code implements the unit test functionality
 # https://docs.python.org/3/library/unittest.html has a nice description of the framework
 
-
 class TestTriangles(unittest.TestCase):
     # define multiple sets of tests as functions with names that begin
 
-    def testRightTriangleA(self):
-        self.assertEqual(classifyTriangle(3, 4, 5), 'Right', '3,4,5 is a Right triangle')
+    def testRightTriangleA(self): 
+        self.assertEqual(classifyTriangle(3,4,5),'Right','3,4,5 is a Right triangle')
 
-    def testRightTriangleB(self):
-        self.assertEqual(classifyTriangle(5, 3, 4), 'Right', '5,3,4 is a Right triangle')
-
-    def testEquilateralTriangles(self):
-        self.assertEqual(classifyTriangle(1, 1, 1), 'Equilateral', '1,1,1 should be equilateral')
-
-    # Modifying is from here.
-
-    def testNotTriangle(self):
-        self.assertEqual(classifyTriangle(1, 2, 3), 'NotATriangle', '1,2,3 is not a triangle.')
-
-    def testNotTriangleB(self):
-        self.assertEqual(classifyTriangle(3, 5, 10), 'NotATriangle', '3,5,10 is not a triangle.')
-
-    def testScaleneTriangle(self):
-        self.assertEqual(classifyTriangle(7, 8, 9), 'Scalene', '3, 3, 4 is a scalene triangle. ')
-
-    def testIsocelesTriangle(self):
-        self.assertEqual(classifyTriangle(3, 3, 4), 'Isoceles', '7 ,8 ,9 is a isoceles triangle. ')
-
+    def testRightTriangleB(self): 
+        self.assertEqual(classifyTriangle(5,3,4),'Right','5,3,4 is a Right triangle')
+        
+    def testEquilateralTriangles(self): 
+        self.assertEqual(classifyTriangle(1,1,1),'Equilateral','1,1,1 should be equilateral')
 
 if __name__ == '__main__':
     print('Running unit tests')
